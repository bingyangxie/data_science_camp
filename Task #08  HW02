#利用 Country, Age, Salary 對 Purchased 進行分類學習，印出後三筆資料的 Purchased 為何

import pandas as pd
import statsmodels.api as sm
from sklearn.preprocessing import LabelEncoder
from sklearn.linear_model import LogisticRegression
source = 'https://raw.githubusercontent.com/MachineLearningLiuMing/scikit-learn-primer-guide/master/Data.csv'
df = pd.read_csv(source)

df.fillna(df.mean(), inplace=True)
df = pd.get_dummies(df, columns=['Purchased'], drop_first=True)#為每個類別新增一個欄位，用 0/1 表示是否

# 建立 LabelEncoder
label_encoder = LabelEncoder()
# 將 "Country" 列進行 Label Encoding
df['Country_encoded'] = label_encoder.fit_transform(df['Country'])
# 將前 7 筆資料當作訓練資料，存入 train DataFrame
train = df.iloc[:7]
# 將後 3 筆資料當作測試資料，存入 test DataFrame
test = df.iloc[-3:]

# 定義訓練資料的特徵和標籤
X_train = train[['Country_encoded', 'Age', 'Salary']]
y_train = train['Purchased_Yes']

# 定義測試資料的特徵和標籤
X_test = test[['Country_encoded', 'Age', 'Salary']]
y_test = test['Purchased_Yes']

# 建立 Logistic Regression 模型
model = LogisticRegression()

# 訓練模型
model.fit(X_train, y_train)

# 進行預測
predictions = model.predict(X_test)
# 將數字轉回 "yes" 和 "no"
predicted_labels = pd.Series(predictions).map({0: 'no', 1: 'yes'})

# 印出後三筆資料的 Purchased 預測結果
print(predicted_labels)

#利用 Country, Age, Purchased 對 Salary 進行迴歸學習，印出後三筆資料的 Salary 為何
import pandas as pd
import statsmodels.api as sm
from sklearn.preprocessing import LabelEncoder
from sklearn.linear_model import LinearRegression

source = 'https://raw.githubusercontent.com/MachineLearningLiuMing/scikit-learn-primer-guide/master/Data.csv'
df = pd.read_csv(source)
df.fillna(df.mean(), inplace=True)

# 將Purchased 欄位轉換成虛擬變數（One-hot Encoding）
df = pd.get_dummies(df, columns=['Purchased'], drop_first=True)
# 建立 LabelEncoder
label_encoder = LabelEncoder()
# 將 "Country" 列進行 Label Encoding
df['Country_encoded'] = label_encoder.fit_transform(df['Country'])
# 分成前面 7 筆資料作為訓練資料，後面 3 筆資料作為測試資料
train = df.iloc[:7]
test = df.iloc[-3:]

# 定義訓練資料的特徵和標籤
X_train = train[['Country_encoded', 'Age', 'Purchased_Yes']]
y_train = train['Salary']
# 定義測試資料的特徵
X_test = test[['Country_encoded', 'Age', 'Purchased_Yes']]
y_test = test['Salary']

# 建立迴歸模型
model = LinearRegression()
model.fit(X_train, y_train)
# 進行預測
predictions = model.predict(X_test)

# 印出後三筆資料的 Salary 預測結果
print(predictions)

